version: '3.7'
services:
    frontend:
      build:
        context: ./app-frontend 
      ports:
        - "3000:80"
      networks:
        - app-network

    nginx:
      image: nginx:alpine
      restart: unless-stopped
      ports:
        - "80:80"
      volumes:
        - ./app-backend:/var/www
        - ./nginx/conf.d/:/etc/nginx/conf.d/
      networks:
        - app-network
      depends_on:
        - backend

    backend:
      build:
        context: ./app-backend/
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
      working_dir: /var/www
      volumes:
        - ./app-backend:/var/www
        - /var/www/vendor # prevents host machine from overwriting vendor
        - .env:/var/www/.env # Add this line
      networks:
        - app-network
        - db

    appdb:
      image: mysql:5.7
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      volumes:
        - ./initdb:/docker-entrypoint-initdb.d
        - dbdata:/var/lib/mysql
      ports:
        - "3306:3306"
      networks:
        - db

    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      restart: unless-stopped
      environment:
        PMA_HOST: appdb
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      depends_on:
        - appdb
      ports:
        - "8080:80"
      networks:
        - db

networks:
  app-network:
    driver: bridge
  db:

volumes:
  dbdata: